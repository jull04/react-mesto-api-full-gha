{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n    this._authorization = options.headers.authorization;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.firstname,\n        about: data.job\n      })\n    }).then(this._checkResponse);\n  }\n  setAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._checkResponse);\n  }\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.title,\n        link: data.link\n      })\n    }).then(this._checkResponse);\n  }\n  putLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-70',\n  headers: {\n    authorization: 'aa4e4177-7d9a-46f6-84e8-d329937ea67d',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_url","baseUrl","_headers","headers","_authorization","authorization","_checkResponse","res","ok","json","Promise","reject","status","getInfo","fetch","then","getCards","setUserInfo","data","method","body","JSON","stringify","name","firstname","about","job","setAvatar","avatar","addCard","title","link","putLike","cardId","deleteLike","deleteCard","api"],"sources":["/Users/juliakh/Desktop/react-mesto-auth/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n    this._authorization = options.headers.authorization;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: this._authorization\n    }\n    })\n    .then(this._checkResponse);\n  }\n\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: this._authorization\n    }\n    })\n    .then(this._checkResponse);\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n            name: data.firstname,\n            about: data.job,\n          })\n      })\n    .then(this._checkResponse);\n  }\n\n  setAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n            avatar: data.avatar,\n          })\n      })\n    .then(this._checkResponse);\n  }\n\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n            name: data.title,\n            link: data.link,\n          })\n      })\n    .then(this._checkResponse);\n  }\n\n  putLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._authorization\n      }\n    })\n    .then(this._checkResponse);\n  }\n  \n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    })\n    .then(this._checkResponse)\n  }\n    \n  deleteCard(cardId){\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    })\n    .then(this._checkResponse)\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-70',\n  headers: {\n    authorization: 'aa4e4177-7d9a-46f6-84e8-d329937ea67d',\n    'Content-Type': 'application/json'\n  }\n}); \n\nexport default  api "],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACRC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,IAAI,GAAGD,OAAO,CAACE,OAAO;IAC3B,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,OAAO;IAC/B,IAAI,CAACC,cAAc,GAAGL,OAAO,CAACI,OAAO,CAACE,aAAa;EACrD;EAEAC,cAAcA,CAACC,GAAG,EAAE;IAClB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAChD;EAEAC,OAAOA,CAAA,EAAG;IACR,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACd,IAAK,WAAU,EAAE;MACpCG,OAAO,EAAE;QACPE,aAAa,EAAE,IAAI,CAACD;MACxB;IACA,CAAC,CAAC,CACDW,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAC5B;EAEAU,QAAQA,CAAA,EAAG;IACT,OAAOF,KAAK,CAAE,GAAE,IAAI,CAACd,IAAK,QAAO,EAAE;MACjCG,OAAO,EAAE;QACPE,aAAa,EAAE,IAAI,CAACD;MACxB;IACA,CAAC,CAAC,CACDW,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAC5B;EAEAW,WAAWA,CAACC,IAAI,EAAE;IAChB,OAAOJ,KAAK,CAAE,GAAE,IAAI,CAACd,IAAK,WAAU,EAAE;MAClCmB,MAAM,EAAE,OAAO;MACfhB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,IAAI,EAAEL,IAAI,CAACM,SAAS;QACpBC,KAAK,EAAEP,IAAI,CAACQ;MACd,CAAC;IACL,CAAC,CAAC,CACHX,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAC5B;EAEAqB,SAASA,CAACT,IAAI,EAAE;IACd,OAAOJ,KAAK,CAAE,GAAE,IAAI,CAACd,IAAK,kBAAiB,EAAE;MACzCmB,MAAM,EAAE,OAAO;MACfhB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBM,MAAM,EAAEV,IAAI,CAACU;MACf,CAAC;IACL,CAAC,CAAC,CACHb,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAC5B;EAEAuB,OAAOA,CAACX,IAAI,EAAE;IACZ,OAAOJ,KAAK,CAAE,GAAE,IAAI,CAACd,IAAK,QAAO,EAAE;MAC/BmB,MAAM,EAAE,MAAM;MACdhB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,IAAI,EAAEL,IAAI,CAACY,KAAK;QAChBC,IAAI,EAAEb,IAAI,CAACa;MACb,CAAC;IACL,CAAC,CAAC,CACHhB,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAC5B;EAEA0B,OAAOA,CAACC,MAAM,EAAE;IACd,OAAOnB,KAAK,CAAE,GAAE,IAAI,CAACd,IAAK,UAASiC,MAAO,QAAO,EAAE;MACjDd,MAAM,EAAE,KAAK;MACbhB,OAAO,EAAE;QACPE,aAAa,EAAE,IAAI,CAACD;MACtB;IACF,CAAC,CAAC,CACDW,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAC5B;EAEA4B,UAAUA,CAACD,MAAM,EAAE;IACjB,OAAOnB,KAAK,CAAE,GAAE,IAAI,CAACd,IAAK,UAASiC,MAAO,QAAO,EAAE;MACjDd,MAAM,EAAE,QAAQ;MAChBhB,OAAO,EAAE;QACPE,aAAa,EAAE,IAAI,CAACD;MACtB;IACF,CAAC,CAAC,CACDW,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAC5B;EAEA6B,UAAUA,CAACF,MAAM,EAAC;IAChB,OAAOnB,KAAK,CAAE,GAAE,IAAI,CAACd,IAAK,UAASiC,MAAO,EAAC,EAAE;MAC3Cd,MAAM,EAAE,QAAQ;MAChBhB,OAAO,EAAE;QACPE,aAAa,EAAE,IAAI,CAACD;MACtB;IACF,CAAC,CAAC,CACDW,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAC5B;AACF;AAEA,MAAM8B,GAAG,GAAG,IAAIvC,GAAG,CAAC;EAClBI,OAAO,EAAE,6CAA6C;EACtDE,OAAO,EAAE;IACPE,aAAa,EAAE,sCAAsC;IACrD,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAgB+B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}